/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.SeatAllocationRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.FlightBoardingEnterprise;
import Business.Network.Network;
import Business.Organization.FoodAllocation;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.FoodAllocationWorkRequest;
import Business.WorkQueue.SeatAllocationWorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 
 */
public class SeatAllocationWorkRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ShelterFacilitationWorkRequestJPanel
     */
    JPanel userProcessContainer;
    SeatAllocationWorkRequest request;
    private UserAccount userAccount;
    private EcoSystem business;

    SeatAllocationWorkRequestJPanel(JPanel userProcessContainer, SeatAllocationWorkRequest request, UserAccount userAccount, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.request = request;
        this.userAccount = userAccount;
        this.business = business;
        populateTable();
    }

    /**
     * Populates table
     */
    public void populateTable() {
        DefaultTableModel model1 = (DefaultTableModel) tblPassengerRecords.getModel();
        DefaultTableModel model2 = (DefaultTableModel) tblPassengerRecords1.getModel();
        model1.setRowCount(0);
        model2.setRowCount(0);
        if (request.getPassengerPerson() != null) {
            Object[] row = new Object[8];
            row[0] = request.getPassengerPerson().getName();
            row[1] = request.getPassengerPerson().getDob();
            row[2] = request.getPassengerPerson().getDestinationCity();
            row[3] = request.getPassengerPerson().getSourceLocation();
            row[4] = request.getPassengerPerson().getPassportNumber();
            row[5] = request.getPassengerPerson().getContactNo();
            row[6] = request.getPassengerPerson().getEmailAddress();
            row[7] = request.getPassengerPerson().getPassportExpiry();
            model1.addRow(row);
            Object[] rowSecond = new Object[5];
            rowSecond[0] = request.getPassengerPerson().getGender();
            rowSecond[1] = request.getPassengerPerson().isHasCriminalRecord() ? "Yes" : "No";
            rowSecond[2] = request.getPassengerPerson().isPreConditions() ? "Yes" : "No";
            rowSecond[3] = request.getPassengerPerson().isMedication() ? "Yes" : "No";
            rowSecond[4] = request.getPassengerPerson().isAccomodationReq() ? "Yes" : "No";
            model2.addRow(rowSecond);

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnSeatAllocated = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPassengerRecords = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPassengerRecords1 = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        checkBoxEconomy = new javax.swing.JCheckBox();
        cboxBusiness = new javax.swing.JCheckBox();
        cboxWindowSeat = new javax.swing.JCheckBox();
        cboxAisleSeat = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        cboxMiddleSeat = new javax.swing.JCheckBox();

        jPanel1.setBackground(new java.awt.Color(223, 190, 153));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnSeatAllocated.setBackground(new java.awt.Color(181, 189, 137));
        btnSeatAllocated.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        btnSeatAllocated.setText("Seat Allocated");
        btnSeatAllocated.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeatAllocatedActionPerformed(evt);
            }
        });
        jPanel1.add(btnSeatAllocated, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 558, 250, 50));

        backJButton.setBackground(new java.awt.Color(181, 189, 137));
        backJButton.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        backJButton.setText("< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        jPanel1.add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 100, 40));

        tblPassengerRecords.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "DOB", "Source", "Destination", "Passport No", "Contact No", "Email Address", "Passport Expiry Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPassengerRecords);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 194, 1064, 150));

        tblPassengerRecords1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Gender", "Criminal Record?", "Medical Condition?", "Medication??", "Special Requirements??"
            }
        ));
        jScrollPane2.setViewportView(tblPassengerRecords1);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 362, 1064, 150));

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(114, 158, 161));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Seat Allocation");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 1064, -1));

        jLabel8.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel8.setText("Check Seat Allocation From below Passenger:");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 148, 580, 34));

        jLabel1.setText("Types Of Seats:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 527, -1, -1));

        checkBoxEconomy.setText("Economy");
        checkBoxEconomy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxEconomyActionPerformed(evt);
            }
        });

        cboxBusiness.setText("Business");
        cboxBusiness.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxBusinessActionPerformed(evt);
            }
        });

        cboxWindowSeat.setText("Window Seat");

        cboxAisleSeat.setText("Aisle Seat");

        jLabel2.setText("Seats Placement:");

        cboxMiddleSeat.setText("Middle Seat");

        jLayeredPane1.setLayer(checkBoxEconomy, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(cboxBusiness, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(cboxWindowSeat, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(cboxAisleSeat, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(cboxMiddleSeat, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(checkBoxEconomy)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboxBusiness)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboxWindowSeat)
                .addGap(18, 18, 18)
                .addComponent(cboxMiddleSeat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cboxAisleSeat)
                .addGap(12, 12, 12))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkBoxEconomy)
                    .addComponent(cboxBusiness)
                    .addComponent(cboxWindowSeat)
                    .addComponent(cboxAisleSeat)
                    .addComponent(jLabel2)
                    .addComponent(cboxMiddleSeat))
                .addContainerGap())
        );

        jPanel1.add(jLayeredPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 520, 690, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1076, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 673, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSeatAllocatedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeatAllocatedActionPerformed
        if (request.getStatus().equals("Completed")) {
            JOptionPane.showMessageDialog(null, "This request has already been completed by you!");
            return;
        }
        request.setTestResult("Sent to Food & Hospitality Manager");
        request.setStatus("Completed");
        UserAccount account = new UserAccount();
        account.setUsername("None");
        request.getSecurityCheckWorkRequest().setReceiver(account);
        request.getSecurityCheckWorkRequest().setTestResult("Completed by Seat Allocation Manager and send to Food & Hospitality Manager");
        ArrayList<String> symptoms = new ArrayList<>();

        FoodAllocationWorkRequest bloodTestWorkRequest = new FoodAllocationWorkRequest();
        bloodTestWorkRequest.setMessage("Check the seat availability!");
        bloodTestWorkRequest.setSender(userAccount);
        bloodTestWorkRequest.setStatus("Sent");
        bloodTestWorkRequest.setPassengerPerson(request.getPassengerPerson());
        bloodTestWorkRequest.setsecurityCheckWorkRequest(request.getSecurityCheckWorkRequest());
        if (checkBoxEconomy.isSelected()) {
            symptoms.add("Economy");
        }
        if (cboxBusiness.isSelected()) {
            symptoms.add("Business");
        }
        if (cboxWindowSeat.isSelected()) {
            symptoms.add("Window Seat");
        }
        if (cboxAisleSeat.isSelected()) {
            symptoms.add("Aisle Seat");
        }
        if (cboxMiddleSeat.isSelected()) {
            symptoms.add("Middle Seat");
        }

        request.getSecurityCheckWorkRequest().setAllocatedSeat(symptoms);
        Date d = new Date();
        bloodTestWorkRequest.setRequestDate(d);
        Organization org = null;

        for (Network network : business.getNetworkList()) {
            //Step 2.a: check against each enterprise
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                if (enterprise instanceof FlightBoardingEnterprise) {
                    for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                        if (organization instanceof FoodAllocation) {
                            org = organization;
                            break;
                        }
                    }
                }
            }
        }
        if (org != null) {
            org.getWorkQueue().getWorkRequestList().add(bloodTestWorkRequest);
            userAccount.getWorkQueue().getWorkRequestList().add(bloodTestWorkRequest);
            JOptionPane.showMessageDialog(this, "Request Sent to Food & Hospitality Organization");
        }
    }//GEN-LAST:event_btnSeatAllocatedActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SeatAllocationWorkAreaJPanel dwjp = (SeatAllocationWorkAreaJPanel) component;
        dwjp.populateReceiveTable();
        dwjp.populateSentTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void cboxBusinessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxBusinessActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboxBusinessActionPerformed

    private void checkBoxEconomyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxEconomyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkBoxEconomyActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnSeatAllocated;
    private javax.swing.JCheckBox cboxAisleSeat;
    private javax.swing.JCheckBox cboxBusiness;
    private javax.swing.JCheckBox cboxMiddleSeat;
    private javax.swing.JCheckBox cboxWindowSeat;
    private javax.swing.JCheckBox checkBoxEconomy;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblPassengerRecords;
    private javax.swing.JTable tblPassengerRecords1;
    // End of variables declaration//GEN-END:variables
}
