/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.SecurityOfficerRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.AirportCheckinEnterprise;
import Business.Network.Network;
import Business.Organization.TicketVerification;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.TicketVerificationWorkRequest;
import Business.WorkQueue.SecurityCheckWorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.URL;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rethuchrishel
 */
public class SecurityOfficerWorkRequestJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    SecurityCheckWorkRequest request;
    private UserAccount userAccount;
    private EcoSystem business;

    /**
     * Creates new form HospitalAllocatorWorkRequestJPanel
     */
    public SecurityOfficerWorkRequestJPanel(JPanel userProcessContainer, SecurityCheckWorkRequest request, UserAccount account, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.request = request;
        this.userAccount = account;
        this.business = business;
        populateTable();
    }

    /**
     * Populates table
     */
    public void populateTable() {
        DefaultTableModel model1 = (DefaultTableModel) tblPassengerRecords.getModel();
        DefaultTableModel model2 = (DefaultTableModel) tblPassengerRecords1.getModel();
        model1.setRowCount(0);
        model2.setRowCount(0);
        if (request.getPassengerPerson() != null) {
            Object[] row = new Object[8];
            row[0] = request.getPassengerPerson().getName();
            row[1] = request.getPassengerPerson().getDob();
            row[2] = request.getPassengerPerson().getDestinationCity();
            row[3] = request.getPassengerPerson().getSourceLocation();
            row[4] = request.getPassengerPerson().getPassportNumber();
            row[5] = request.getPassengerPerson().getContactNo();
            row[6] = request.getPassengerPerson().getEmailAddress();
            row[7] = request.getPassengerPerson().getPassportExpiry();
            model1.addRow(row);
            Object[] rowSecond = new Object[9];
            rowSecond[0] = request.getPassengerPerson().getSeatPreference();
            rowSecond[1] = request.getPassengerPerson().getFoodPreference();
            rowSecond[2] = request.getPassengerPerson().getEmergencyNo();
            rowSecond[3] = request.getPassengerPerson().getEmergencyName();
            rowSecond[4] = request.getPassengerPerson().getGender();
            rowSecond[5] = request.getPassengerPerson().isHasCriminalRecord() ? "Yes" : "No";
            rowSecond[6] = request.getPassengerPerson().isPreConditions() ? "Yes" : "No";
            rowSecond[7] = request.getPassengerPerson().isMedication() ? "Yes" : "No";
            rowSecond[8] = request.getPassengerPerson().isAccomodationReq() ? "Yes" : "No";
            model2.addRow(rowSecond);

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPassengerRecords1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPassengerRecords = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        dboxTerminal = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(153, 0, 0));

        jPanel1.setBackground(new java.awt.Color(153, 0, 0));

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Security Officer");

        tblPassengerRecords1.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        tblPassengerRecords1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Seat Preference", "Food Preference", "Emergency Contact No. ", "Name Of Emergency Contact", "Gender", "Criminal Record?", "Medical Condition?", "Medication?", "Special Requirements?"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPassengerRecords1);

        tblPassengerRecords.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        tblPassengerRecords.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "DOB", "Source", "Destination", "Passport No", "Contact No", "Email Address", "Passport Expiry Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblPassengerRecords);

        jLabel1.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Select Terminal");

        btnSubmit.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Ticket will be verified for below Person:");

        dboxTerminal.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Terminal A - 1 Harborside Dr Boston MA 02128", "Terminal B - Logan Airport Terminal B Boston MA 02128", "Terminal C - Logan Airport Terminal C Boston MA 02128" }));
        dboxTerminal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dboxTerminalActionPerformed(evt);
            }
        });

        jButton2.setText("Show Airport Map");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 1089, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 538, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnSubmit, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(dboxTerminal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(204, 204, 204)
                                .addComponent(jButton2)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGap(71, 71, 71)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dboxTerminal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(126, Short.MAX_VALUE))
        );

        jButton1.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        jButton1.setText("< Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1001, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 710, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SecurityOfficerWorkAreaJPanel wp = (SecurityOfficerWorkAreaJPanel) component;
        wp.populateReceiveTable();
        wp.populateSentTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        if (request.getStatus().equals("Completed")) {
            JOptionPane.showMessageDialog(null, "This request has already been completed by you!");
            return;
        }
        if (dboxTerminal.getSelectedItem().equals("")) {
            JOptionPane.showMessageDialog(null, "Enter the address field to proceed the request!");
            return;
        }
        request.setTestResult("Sent to Ticket Verification Officer");
        request.setStatus("Completed");
        UserAccount account = new UserAccount();
        account.setUsername("None");
        request.setReceiver(account);
        request.setTestResult("Completed by Security Officer and passed to Ticket Verification Officer.");

        TicketVerificationWorkRequest sfRequest = new TicketVerificationWorkRequest();
        sfRequest.setMessage("Ticket Verification");
        sfRequest.setSecurityCheckWorkRequest(request);
        sfRequest.setPassengerPerson(request.getPassengerPerson());
        sfRequest.getSecurityCheckWorkRequest().setTerminalReported(dboxTerminal.getSelectedItem().toString());
        sfRequest.setSender(userAccount);
        sfRequest.setStatus("Sent");
        Date d = new Date();
        sfRequest.setRequestDate(d);
        Organization org = null;

        for (Network network : business.getNetworkList()) {
            //Step 2.a: check against each enterprise
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                if (enterprise instanceof AirportCheckinEnterprise) {
                    for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                        if (organization instanceof TicketVerification) {
                            org = organization;
                            break;
                        }
                    }
                }
            }
        }
        if (org != null) {
            org.getWorkQueue().getWorkRequestList().add(sfRequest);
            userAccount.getWorkQueue().getWorkRequestList().add(sfRequest);
            JOptionPane.showMessageDialog(this, "Request Sent for Ticket Verification");

        }

    }//GEN-LAST:event_btnSubmitActionPerformed

    private void dboxTerminalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dboxTerminalActionPerformed
        // TODO add your handling code here:
        dboxTerminal.getSelectedItem();

    }//GEN-LAST:event_dboxTerminalActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        JFrame test = new JFrame("Google Maps");
        String terminalAddress = dboxTerminal.getSelectedItem().toString();
        terminalAddress = terminalAddress.replaceAll("\\s", "");
        try {
            String imageUrl = "https://maps.googleapis.com/maps/api/staticmap?center=" + terminalAddress + "&zoom=14&size=400x400&key=AIzaSyDQCNrJobG6vR5mRt13VsqZaw10RRx0VAc";
            String destinationFile = "image.jpg";
            String str = destinationFile;
            URL url = new URL(imageUrl);
            InputStream is = url.openStream();
            OutputStream os = new FileOutputStream(destinationFile);
 
            byte[] b = new byte[2048];
            int length;
 
            while ((length = is.read(b)) != -1) {
                os.write(b, 0, length);
            }
 
            is.close();
            os.close();
        } catch (IOException e) {
            e.printStackTrace();
            System.exit(1);
        }
 
        test.add(new JLabel(new ImageIcon((new ImageIcon("image.jpg")).getImage().getScaledInstance(630, 600,
                java.awt.Image.SCALE_SMOOTH))));
 
        test.setVisible(true);
        test.pack();
    }//GEN-LAST:event_jButton2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox<String> dboxTerminal;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblPassengerRecords;
    private javax.swing.JTable tblPassengerRecords1;
    // End of variables declaration//GEN-END:variables
}
